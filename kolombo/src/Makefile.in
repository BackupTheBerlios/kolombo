# Makefile.in generated by automake 1.6.3 from Makefile.am.
# KDE tags expanded automatically by am_edit - $Revision: 1.4 $ 
# @configure_input@

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@
SHELL = @SHELL@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ..

ACLOCAL = @ACLOCAL@
AUTOCONF = @AUTOCONF@
AUTOMAKE = @AUTOMAKE@
AUTOHEADER = @AUTOHEADER@

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_DATA = @INSTALL_DATA@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_HEADER = $(INSTALL_DATA)
transform = @program_transform_name@
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_alias = @build_alias@
build_triplet = @build@
host_alias = @host_alias@
host_triplet = @host@
target_alias = @target_alias@
target_triplet = @target@

EXEEXT = @EXEEXT@
OBJEXT = @OBJEXT@
PATH_SEPARATOR = @PATH_SEPARATOR@
AMTAR = @AMTAR@
AR = @AR@
ARTSCCONFIG = @ARTSCCONFIG@
AS = @AS@
AUTODIRS = @AUTODIRS@
AWK = @AWK@
CC = @CC@
CONF_FILES = @CONF_FILES@
CPP = @CPP@
CXX = @CXX@
CXXCPP = @CXXCPP@
DCOPIDL = @DCOPIDL@
DCOPIDL2CPP = @DCOPIDL2CPP@
DCOPIDLNG = @DCOPIDLNG@
DCOP_DEPENDENCIES = @DCOP_DEPENDENCIES@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
DOXYGEN = @DOXYGEN@
DOXYGEN_PROJECT_NAME = @DOXYGEN_PROJECT_NAME@
DOXYGEN_PROJECT_NUMBER = @DOXYGEN_PROJECT_NUMBER@
DPMSINC = @DPMSINC@
DPMSLIB = @DPMSLIB@
ECHO = @ECHO@
EGREP = @EGREP@
F77 = @F77@
FRAMEWORK_COREAUDIO = @FRAMEWORK_COREAUDIO@
GCJ = @GCJ@
GCJFLAGS = @GCJFLAGS@
GLINC = @GLINC@
GLLIB = @GLLIB@
GMSGFMT = @GMSGFMT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
JAR = @JAR@
JAVAC = @JAVAC@
JAVAH = @JAVAH@
JVMLIBS = @JVMLIBS@
KCFG_DEPENDENCIES = @KCFG_DEPENDENCIES@
KCONFIG_COMPILER = @KCONFIG_COMPILER@
KDECONFIG = @KDECONFIG@
KDE_EXTRA_RPATH = @KDE_EXTRA_RPATH@
KDE_HAS_DOXYGEN = @KDE_HAS_DOXYGEN@
KDE_HAVE_DOT = @KDE_HAVE_DOT@
KDE_INCLUDES = @KDE_INCLUDES@
KDE_LDFLAGS = @KDE_LDFLAGS@
KDE_MT_LDFLAGS = @KDE_MT_LDFLAGS@
KDE_MT_LIBS = @KDE_MT_LIBS@
KDE_NO_UNDEFINED = @KDE_NO_UNDEFINED@
KDE_PLUGIN = @KDE_PLUGIN@
KDE_RPATH = @KDE_RPATH@
KDE_USE_CLOSURE_FALSE = @KDE_USE_CLOSURE_FALSE@
KDE_USE_CLOSURE_TRUE = @KDE_USE_CLOSURE_TRUE@
KDE_USE_FINAL_FALSE = @KDE_USE_FINAL_FALSE@
KDE_USE_FINAL_TRUE = @KDE_USE_FINAL_TRUE@
KDE_USE_NMCHECK_FALSE = @KDE_USE_NMCHECK_FALSE@
KDE_USE_NMCHECK_TRUE = @KDE_USE_NMCHECK_TRUE@
KDE_XSL_STYLESHEET = @KDE_XSL_STYLESHEET@
LEX = @LEX@
LEXLIB = @LEXLIB@
LEX_OUTPUT_ROOT = @LEX_OUTPUT_ROOT@
LIBBZ2 = @LIBBZ2@
LIBCOMPAT = @LIBCOMPAT@
LIBCRYPT = @LIBCRYPT@
LIBDL = @LIBDL@
LIBGEN = @LIBGEN@
LIBJPEG = @LIBJPEG@
LIBOBJS = @LIBOBJS@
LIBPNG = @LIBPNG@
LIBPTHREAD = @LIBPTHREAD@
LIBPYTHON = @LIBPYTHON@
LIBQIMGIO = @LIBQIMGIO@
LIBRESOLV = @LIBRESOLV@
LIBSHADOW = @LIBSHADOW@
LIBSM = @LIBSM@
LIBSOCKET = @LIBSOCKET@
LIBSSL = @LIBSSL@
LIBTIFF = @LIBTIFF@
LIBTOOL = @LIBTOOL@
LIBUCB = @LIBUCB@
LIBUTIL = @LIBUTIL@
LIBZ = @LIBZ@
LIB_JASPER = @LIB_JASPER@
LIB_KAB = @LIB_KAB@
LIB_KABC = @LIB_KABC@
LIB_KDECORE = @LIB_KDECORE@
LIB_KDEPIM = @LIB_KDEPIM@
LIB_KDEPRINT = @LIB_KDEPRINT@
LIB_KDEUI = @LIB_KDEUI@
LIB_KFILE = @LIB_KFILE@
LIB_KFM = @LIB_KFM@
LIB_KHTML = @LIB_KHTML@
LIB_KIO = @LIB_KIO@
LIB_KPARTS = @LIB_KPARTS@
LIB_KSPELL = @LIB_KSPELL@
LIB_KSYCOCA = @LIB_KSYCOCA@
LIB_KUTILS = @LIB_KUTILS@
LIB_POLL = @LIB_POLL@
LIB_QPE = @LIB_QPE@
LIB_QT = @LIB_QT@
LIB_QTOPIA = @LIB_QTOPIA@
LIB_SMB = @LIB_SMB@
LIB_X11 = @LIB_X11@
LIB_XEXT = @LIB_XEXT@
LIB_XRENDER = @LIB_XRENDER@
LN_S = @LN_S@
MCOPIDL = @MCOPIDL@
MEINPROC = @MEINPROC@
MOC = @MOC@
MSGFMT = @MSGFMT@
NOOPT_CFLAGS = @NOOPT_CFLAGS@
NOOPT_CXXFLAGS = @NOOPT_CXXFLAGS@
OBJC = @OBJC@
OBJCFLAGS = @OBJCFLAGS@
OBJDUMP = @OBJDUMP@
PACKAGE = @PACKAGE@
PAMLIBS = @PAMLIBS@
PASSWDLIBS = @PASSWDLIBS@
PERL = @PERL@
PYTHONINC = @PYTHONINC@
PYTHONLIB = @PYTHONLIB@
PYTHONMODDIR = @PYTHONMODDIR@
QTDOCDIR = @QTDOCDIR@
QTE_NORTTI = @QTE_NORTTI@
QTOPIA_INCLUDES = @QTOPIA_INCLUDES@
QT_INCLUDES = @QT_INCLUDES@
QT_LDFLAGS = @QT_LDFLAGS@
RANLIB = @RANLIB@
RC = @RC@
SETUIDFLAGS = @SETUIDFLAGS@
SSL_INCLUDES = @SSL_INCLUDES@
SSL_LDFLAGS = @SSL_LDFLAGS@
STRIP = @STRIP@
TOPSUBDIRS = @TOPSUBDIRS@
UIC = @UIC@
UIC_TR = @UIC_TR@
USER_INCLUDES = @USER_INCLUDES@
USER_LDFLAGS = @USER_LDFLAGS@
USE_EXCEPTIONS = @USE_EXCEPTIONS@
USE_RTTI = @USE_RTTI@
USE_THREADS = @USE_THREADS@
VERSION = @VERSION@
WOVERLOADED_VIRTUAL = @WOVERLOADED_VIRTUAL@
XGETTEXT = @XGETTEXT@
XMLLINT = @XMLLINT@
XPMINC = @XPMINC@
XPMLIB = @XPMLIB@
X_EXTRA_LIBS = @X_EXTRA_LIBS@
X_INCLUDES = @X_INCLUDES@
X_LDFLAGS = @X_LDFLAGS@
X_PRE_LIBS = @X_PRE_LIBS@
X_RPATH = @X_RPATH@
all_includes = @all_includes@
all_libraries = @all_libraries@
am__include = @am__include@
am__quote = @am__quote@
install_sh = @install_sh@
jni_includes = @jni_includes@
kde_appsdir = @kde_appsdir@
kde_bindir = @kde_bindir@
kde_confdir = @kde_confdir@
kde_datadir = @kde_datadir@
kde_htmldir = @kde_htmldir@
kde_icondir = @kde_icondir@
kde_includes = @kde_includes@
kde_kcfgdir = @kde_kcfgdir@
kde_libraries = @kde_libraries@
kde_libs_htmldir = @kde_libs_htmldir@
kde_libs_prefix = @kde_libs_prefix@
kde_locale = @kde_locale@
kde_mimedir = @kde_mimedir@
kde_moduledir = @kde_moduledir@
kde_qtver = @kde_qtver@
kde_servicesdir = @kde_servicesdir@
kde_servicetypesdir = @kde_servicetypesdir@
kde_sounddir = @kde_sounddir@
kde_styledir = @kde_styledir@
kde_templatesdir = @kde_templatesdir@
kde_wallpaperdir = @kde_wallpaperdir@
kde_widgetdir = @kde_widgetdir@
kdeinitdir = @kdeinitdir@
qt_includes = @qt_includes@
qt_libraries = @qt_libraries@
x_includes = @x_includes@
x_libraries = @x_libraries@
xdg_appsdir = @xdg_appsdir@
xdg_directorydir = @xdg_directorydir@
xdg_menudir = @xdg_menudir@

# this is the program that gets installed.  it's name is used for all
# of the other Makefile.am variables
bin_PROGRAMS = kbird2 kbird2_client

# set the include path for X, qt and KDE
INCLUDES = $(all_includes)

# the library search path. 
kbird2_LDFLAGS = $(KDE_RPATH) $(all_libraries)

# the libraries to link against.
kbird2_LDADD = $(LIB_KFILE) $(LIB_KDEPRINT) 

# which sources should be compiled for kbird2
#>- kbird2_SOURCES = main.cpp kbird2.cpp kbird2view.cpp kbird2iface.skel listados.h \
#>- 	listados.cpp listadosWdg.ui pageonewdg.ui configuration.h configuration.cpp \
#>- 	ojoWdg.ui gestionparametros.h gestionparametros.cpp ojo.h ojo.cpp plumaje.h \
#>- 	plumaje.cpp plumajeWdg.ui nacionWdg.ui nacion.h nacion.cpp tiposueltaWdg.ui \
#>- 	tiposuelta.h tiposuelta.cpp parejasWdg.ui parejas.h parejas.cpp nuevaparejaWdg.ui \
#>- 	nuevoHijoDlg.ui datosPalomaWdg.ui datospaloma.h datospaloma.cpp arbolGenWdg.ui \
#>- 	arbolgen.h arbolgen.cpp buscarDlg.ui buscar.cpp parejasStatsDlg.ui \
#>- 	parejasstats.cpp basechart.cpp generalstats.cpp sueltasWdg.ui suelta.cpp pagetwowdg.ui \
#>- 	kbird2config.kcfgc updatePrefWdg.ui pref.cpp updatedlg.ui updateDetailsDlg.ui \
#>- 	concursosWdg.ui concursos.cpp nuevoConcursoDlg.ui nuevoconcurso.cpp comprobarDlg.ui \
#>- 	comprobar.cpp palomardatatable.cpp palomardatatable.h exportarTaurisWdg.ui
#>+ 11
kbird2_SOURCES=main.cpp kbird2.cpp kbird2view.cpp  listados.h \
	listados.cpp   configuration.h configuration.cpp \
	 gestionparametros.h gestionparametros.cpp ojo.h ojo.cpp plumaje.h \
	plumaje.cpp   nacion.h nacion.cpp  \
	tiposuelta.h tiposuelta.cpp  parejas.h parejas.cpp  \
	  datospaloma.h datospaloma.cpp  \
	arbolgen.h arbolgen.cpp  buscar.cpp  \
	parejasstats.cpp basechart.cpp generalstats.cpp  suelta.cpp  \
	  pref.cpp   \
	 concursos.cpp  nuevoconcurso.cpp  \
	comprobar.cpp palomardatatable.cpp palomardatatable.h  kbird2iface_skel.cpp listadosWdg.cpp pageonewdg.cpp ojoWdg.cpp plumajeWdg.cpp nacionWdg.cpp tiposueltaWdg.cpp parejasWdg.cpp nuevaparejaWdg.cpp nuevoHijoDlg.cpp datosPalomaWdg.cpp arbolGenWdg.cpp buscarDlg.cpp parejasStatsDlg.cpp sueltasWdg.cpp pagetwowdg.cpp updatePrefWdg.cpp updatedlg.cpp updateDetailsDlg.cpp concursosWdg.cpp nuevoConcursoDlg.cpp comprobarDlg.cpp exportarTaurisWdg.cpp kbird2config.cpp


# Añadido por mi para adaptar la aplicación a KConfigXT
kde_kcfg_DATA = kbird2.kcfg

# these are the headers for your project
noinst_HEADERS = kbird2.h kbird2view.h pref.h buscar.h parejasstats.h basechart.h generalstats.h suelta.h concursos.h nuevoconcurso.h comprobar.h

# client stuff
kbird2_client_LDFLAGS = $(KDE_RPATH) $(all_libraries)
kbird2_client_LDADD = $(LIB_KDECORE)
kbird2_client_SOURCES = kbird2_client.cpp

# let automoc handle all of the meta source files (moc)
#>- METASOURCES = AUTO

KDE_ICON = kbird2

# this is where the kdelnk file will go 
kdelnkdir = $(kde_appsdir)/Utilities
kdelnk_DATA = kbird2.desktop

# this is where the XML-GUI resource file goes
rcdir = $(kde_datadir)/kbird2
rc_DATA = kbird2ui.rc
subdir = src
mkinstalldirs = $(SHELL) $(top_srcdir)/admin/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
bin_PROGRAMS = kbird2$(EXEEXT) kbird2_client$(EXEEXT)
PROGRAMS = $(bin_PROGRAMS)

am_kbird2_OBJECTS = main.$(OBJEXT) kbird2.$(OBJEXT) kbird2view.$(OBJEXT) \
	listados.$(OBJEXT) configuration.$(OBJEXT) \
	gestionparametros.$(OBJEXT) ojo.$(OBJEXT) plumaje.$(OBJEXT) \
	nacion.$(OBJEXT) tiposuelta.$(OBJEXT) parejas.$(OBJEXT) \
	datospaloma.$(OBJEXT) arbolgen.$(OBJEXT) buscar.$(OBJEXT) \
	parejasstats.$(OBJEXT) basechart.$(OBJEXT) \
	generalstats.$(OBJEXT) suelta.$(OBJEXT) pref.$(OBJEXT) \
	concursos.$(OBJEXT) nuevoconcurso.$(OBJEXT) comprobar.$(OBJEXT) \
	palomardatatable.$(OBJEXT)
#>- kbird2_OBJECTS = $(am_kbird2_OBJECTS)
#>+ 13
kbird2_final_OBJECTS = kbird2.all_cpp.o 
kbird2_nofinal_OBJECTS = main.$(OBJEXT) kbird2.$(OBJEXT) kbird2view.$(OBJEXT) \
	listados.$(OBJEXT) configuration.$(OBJEXT) \
	gestionparametros.$(OBJEXT) ojo.$(OBJEXT) plumaje.$(OBJEXT) \
	nacion.$(OBJEXT) tiposuelta.$(OBJEXT) parejas.$(OBJEXT) \
	datospaloma.$(OBJEXT) arbolgen.$(OBJEXT) buscar.$(OBJEXT) \
	parejasstats.$(OBJEXT) basechart.$(OBJEXT) \
	generalstats.$(OBJEXT) suelta.$(OBJEXT) pref.$(OBJEXT) \
	concursos.$(OBJEXT) nuevoconcurso.$(OBJEXT) comprobar.$(OBJEXT) \
	palomardatatable.$(OBJEXT) kbird2iface_skel.$(OBJEXT) listadosWdg.$(OBJEXT) pageonewdg.$(OBJEXT) ojoWdg.$(OBJEXT) plumajeWdg.$(OBJEXT) nacionWdg.$(OBJEXT) tiposueltaWdg.$(OBJEXT) parejasWdg.$(OBJEXT) nuevaparejaWdg.$(OBJEXT) nuevoHijoDlg.$(OBJEXT) datosPalomaWdg.$(OBJEXT) arbolGenWdg.$(OBJEXT) buscarDlg.$(OBJEXT) parejasStatsDlg.$(OBJEXT) sueltasWdg.$(OBJEXT) pagetwowdg.$(OBJEXT) updatePrefWdg.$(OBJEXT) updatedlg.$(OBJEXT) updateDetailsDlg.$(OBJEXT) concursosWdg.$(OBJEXT) nuevoConcursoDlg.$(OBJEXT) comprobarDlg.$(OBJEXT) exportarTaurisWdg.$(OBJEXT) kbird2config.$(OBJEXT)\
parejas.moc.o plumaje.moc.o tiposuelta.moc.o listados.moc.o nacion.moc.o arbolgen.moc.o datospaloma.moc.o gestionparametros.moc.o ojo.moc.o 
@KDE_USE_FINAL_FALSE@kbird2_OBJECTS = $(kbird2_nofinal_OBJECTS)
@KDE_USE_FINAL_TRUE@kbird2_OBJECTS = $(kbird2_final_OBJECTS)
kbird2_DEPENDENCIES =
am_kbird2_client_OBJECTS = kbird2_client.$(OBJEXT)
#>- kbird2_client_OBJECTS = $(am_kbird2_client_OBJECTS)
#>+ 1
kbird2_client_OBJECTS = kbird2_client.$(OBJEXT)
kbird2_client_DEPENDENCIES =

DEFS = @DEFS@
DEFAULT_INCLUDES =  -I. -I$(srcdir) -I$(top_builddir)
CPPFLAGS = @CPPFLAGS@
LDFLAGS = @LDFLAGS@
LIBS = @LIBS@
depcomp = $(SHELL) $(top_srcdir)/admin/depcomp
am__depfiles_maybe = depfiles
#>- @AMDEP_TRUE@DEP_FILES = ./$(DEPDIR)/arbolgen.Po ./$(DEPDIR)/basechart.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/buscar.Po ./$(DEPDIR)/comprobar.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/concursos.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/configuration.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/datospaloma.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/generalstats.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/gestionparametros.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/kbird2.Po ./$(DEPDIR)/kbird2_client.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/kbird2view.Po ./$(DEPDIR)/listados.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/main.Po ./$(DEPDIR)/nacion.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/nuevoconcurso.Po ./$(DEPDIR)/ojo.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/palomardatatable.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/parejas.Po ./$(DEPDIR)/parejasstats.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/plumaje.Po ./$(DEPDIR)/pref.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/suelta.Po ./$(DEPDIR)/tiposuelta.Po
#>+ 30
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@DEP_FILES =  $(DEPDIR)/kbird2iface_skel.P $(DEPDIR)/listadosWdg.P $(DEPDIR)/pageonewdg.P $(DEPDIR)/ojoWdg.P $(DEPDIR)/plumajeWdg.P $(DEPDIR)/nacionWdg.P $(DEPDIR)/tiposueltaWdg.P $(DEPDIR)/parejasWdg.P $(DEPDIR)/nuevaparejaWdg.P $(DEPDIR)/nuevoHijoDlg.P $(DEPDIR)/datosPalomaWdg.P $(DEPDIR)/arbolGenWdg.P $(DEPDIR)/buscarDlg.P $(DEPDIR)/parejasStatsDlg.P $(DEPDIR)/sueltasWdg.P $(DEPDIR)/pagetwowdg.P $(DEPDIR)/updatePrefWdg.P $(DEPDIR)/updatedlg.P $(DEPDIR)/updateDetailsDlg.P $(DEPDIR)/concursosWdg.P $(DEPDIR)/nuevoConcursoDlg.P $(DEPDIR)/comprobarDlg.P $(DEPDIR)/exportarTaurisWdg.P $(DEPDIR)/kbird2config.P $(DEPDIR)/parejas.moc.P $(DEPDIR)/plumaje.moc.P $(DEPDIR)/tiposuelta.moc.P $(DEPDIR)/listados.moc.P $(DEPDIR)/nacion.moc.P $(DEPDIR)/arbolgen.moc.P $(DEPDIR)/datospaloma.moc.P $(DEPDIR)/gestionparametros.moc.P $(DEPDIR)/ojo.moc.P  $(DEPDIR)/kbird2.all_cpp.P $(DEPDIR)/kbird2_client.all_cpp.P ./$(DEPDIR)/arbolgen.Po ./$(DEPDIR)/basechart.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/buscar.Po ./$(DEPDIR)/comprobar.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/concursos.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/configuration.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/datospaloma.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/generalstats.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/gestionparametros.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/kbird2.Po ./$(DEPDIR)/kbird2_client.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/kbird2view.Po ./$(DEPDIR)/listados.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/main.Po ./$(DEPDIR)/nacion.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/nuevoconcurso.Po ./$(DEPDIR)/ojo.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/palomardatatable.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/parejas.Po ./$(DEPDIR)/parejasstats.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/plumaje.Po ./$(DEPDIR)/pref.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/suelta.Po ./$(DEPDIR)/tiposuelta.Po
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@DEP_FILES =  $(DEPDIR)/kbird2iface_skel.P $(DEPDIR)/listadosWdg.P $(DEPDIR)/pageonewdg.P $(DEPDIR)/ojoWdg.P $(DEPDIR)/plumajeWdg.P $(DEPDIR)/nacionWdg.P $(DEPDIR)/tiposueltaWdg.P $(DEPDIR)/parejasWdg.P $(DEPDIR)/nuevaparejaWdg.P $(DEPDIR)/nuevoHijoDlg.P $(DEPDIR)/datosPalomaWdg.P $(DEPDIR)/arbolGenWdg.P $(DEPDIR)/buscarDlg.P $(DEPDIR)/parejasStatsDlg.P $(DEPDIR)/sueltasWdg.P $(DEPDIR)/pagetwowdg.P $(DEPDIR)/updatePrefWdg.P $(DEPDIR)/updatedlg.P $(DEPDIR)/updateDetailsDlg.P $(DEPDIR)/concursosWdg.P $(DEPDIR)/nuevoConcursoDlg.P $(DEPDIR)/comprobarDlg.P $(DEPDIR)/exportarTaurisWdg.P $(DEPDIR)/kbird2config.P $(DEPDIR)/parejas.moc.P $(DEPDIR)/plumaje.moc.P $(DEPDIR)/tiposuelta.moc.P $(DEPDIR)/listados.moc.P $(DEPDIR)/nacion.moc.P $(DEPDIR)/arbolgen.moc.P $(DEPDIR)/datospaloma.moc.P $(DEPDIR)/gestionparametros.moc.P $(DEPDIR)/ojo.moc.P ./$(DEPDIR)/arbolgen.Po ./$(DEPDIR)/basechart.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/buscar.Po ./$(DEPDIR)/comprobar.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/concursos.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/configuration.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/datospaloma.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/generalstats.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/gestionparametros.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/kbird2.Po ./$(DEPDIR)/kbird2_client.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/kbird2view.Po ./$(DEPDIR)/listados.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/main.Po ./$(DEPDIR)/nacion.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/nuevoconcurso.Po ./$(DEPDIR)/ojo.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/palomardatatable.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/parejas.Po ./$(DEPDIR)/parejasstats.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/plumaje.Po ./$(DEPDIR)/pref.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/suelta.Po ./$(DEPDIR)/tiposuelta.Po
#>- CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
#>- 	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
#>+ 2
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS)
#>- LTCXXCOMPILE = $(LIBTOOL) --mode=compile $(CXX) $(DEFS) \
#>- 	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
#>- 	$(AM_CXXFLAGS) $(CXXFLAGS)
#>+ 3
LTCXXCOMPILE = $(LIBTOOL) --mode=compile --tag=CXX $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS)
CXXLD = $(CXX)
#>- CXXLINK = $(LIBTOOL) --mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
#>- 	$(AM_LDFLAGS) $(LDFLAGS) -o $@
#>+ 2
CXXLINK = $(LIBTOOL) --mode=link --tag=CXX $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
CXXFLAGS = @CXXFLAGS@
CFLAGS = @CFLAGS@
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) \
	$(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
DIST_SOURCES = $(kbird2_SOURCES) $(kbird2_client_SOURCES)
DATA = $(kde_kcfg_DATA) $(kdelnk_DATA) $(rc_DATA)

HEADERS = $(noinst_HEADERS)

DIST_COMMON = README $(noinst_HEADERS) Makefile.am Makefile.in
SOURCES = $(kbird2_SOURCES) $(kbird2_client_SOURCES)

#>- all: all-am
#>+ 1
all: docs-am  all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  Makefile.am  $(top_srcdir)/configure.in $(ACLOCAL_M4)
#>- 	cd $(top_srcdir) && \
#>- 	  $(AUTOMAKE) --gnu  src/Makefile
#>+ 3
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/Makefile
	cd $(top_srcdir) && perl admin/am_edit src/Makefile.in
Makefile:  $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(bindir)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	     || test -f $$p1 \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) $$p $(DESTDIR)$(bindir)/$$f"; \
	   $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) $$p $(DESTDIR)$(bindir)/$$f; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f $(DESTDIR)$(bindir)/$$f"; \
	  rm -f $(DESTDIR)$(bindir)/$$f; \
	done

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
kbird2$(EXEEXT): $(kbird2_OBJECTS) $(kbird2_DEPENDENCIES) 
	@rm -f kbird2$(EXEEXT)
	$(CXXLINK) $(kbird2_LDFLAGS) $(kbird2_OBJECTS) $(kbird2_LDADD) $(LIBS)
kbird2_client$(EXEEXT): $(kbird2_client_OBJECTS) $(kbird2_client_DEPENDENCIES) 
	@rm -f kbird2_client$(EXEEXT)
	$(CXXLINK) $(kbird2_client_LDFLAGS) $(kbird2_client_OBJECTS) $(kbird2_client_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/arbolgen.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/basechart.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/buscar.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/comprobar.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/concursos.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/configuration.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/datospaloma.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/generalstats.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gestionparametros.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kbird2.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kbird2_client.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kbird2view.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/listados.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/main.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/nacion.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/nuevoconcurso.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ojo.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/palomardatatable.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/parejas.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/parejasstats.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/plumaje.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pref.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/suelta.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tiposuelta.Po@am__quote@

distclean-depend:
	-rm -rf ./$(DEPDIR)

.cpp.o:
@AMDEP_TRUE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXXCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

.cpp.obj:
@AMDEP_TRUE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXXCOMPILE) -c -o $@ `cygpath -w $<`

.cpp.lo:
@AMDEP_TRUE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Plo' tmpdepfile='$(DEPDIR)/$*.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LTCXXCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<
CXXDEPMODE = @CXXDEPMODE@

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:
kde_kcfgDATA_INSTALL = $(INSTALL_DATA)
install-kde_kcfgDATA: $(kde_kcfg_DATA)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(kde_kcfgdir)
	@list='$(kde_kcfg_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(kde_kcfgDATA_INSTALL) $$d$$p $(DESTDIR)$(kde_kcfgdir)/$$f"; \
	  $(kde_kcfgDATA_INSTALL) $$d$$p $(DESTDIR)$(kde_kcfgdir)/$$f; \
	done

uninstall-kde_kcfgDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(kde_kcfg_DATA)'; for p in $$list; do \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f $(DESTDIR)$(kde_kcfgdir)/$$f"; \
	  rm -f $(DESTDIR)$(kde_kcfgdir)/$$f; \
	done
kdelnkDATA_INSTALL = $(INSTALL_DATA)
install-kdelnkDATA: $(kdelnk_DATA)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(kdelnkdir)
	@list='$(kdelnk_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(kdelnkDATA_INSTALL) $$d$$p $(DESTDIR)$(kdelnkdir)/$$f"; \
	  $(kdelnkDATA_INSTALL) $$d$$p $(DESTDIR)$(kdelnkdir)/$$f; \
	done

uninstall-kdelnkDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(kdelnk_DATA)'; for p in $$list; do \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f $(DESTDIR)$(kdelnkdir)/$$f"; \
	  rm -f $(DESTDIR)$(kdelnkdir)/$$f; \
	done
rcDATA_INSTALL = $(INSTALL_DATA)
install-rcDATA: $(rc_DATA)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(rcdir)
	@list='$(rc_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(rcDATA_INSTALL) $$d$$p $(DESTDIR)$(rcdir)/$$f"; \
	  $(rcDATA_INSTALL) $$d$$p $(DESTDIR)$(rcdir)/$$f; \
	done

uninstall-rcDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(rc_DATA)'; for p in $$list; do \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f $(DESTDIR)$(rcdir)/$$f"; \
	  rm -f $(DESTDIR)$(rcdir)/$$f; \
	done

ETAGS = etags
ETAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH
#>- DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
#>+ 1
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST) $(KDE_DIST)

top_distdir = ..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	@list='$(DISTFILES)'; for file in $$list; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS) $(DATA) $(HEADERS)

installdirs:
	$(mkinstalldirs) $(DESTDIR)$(bindir) $(DESTDIR)$(kde_kcfgdir) $(DESTDIR)$(kdelnkdir) $(DESTDIR)$(rcdir)

install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
#>- clean: clean-am
#>+ 1
clean: kde-rpo-clean  clean-am

#>- clean-am: clean-binPROGRAMS clean-generic clean-libtool mostlyclean-am
#>+ 1
clean-am: clean-metasources clean-idl clean-ui clean-kcfg clean-bcheck clean-final  clean-binPROGRAMS clean-generic clean-libtool mostlyclean-am

distclean: distclean-am

distclean-am: clean-am distclean-compile distclean-depend \
	distclean-generic distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

info: info-am

info-am:

#>- install-data-am: install-kde_kcfgDATA install-kdelnkDATA install-rcDATA
#>+ 1
install-data-am: install-kde-icons  install-kde_kcfgDATA install-kdelnkDATA install-rcDATA

install-exec-am: install-binPROGRAMS

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am

maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

#>- uninstall-am: uninstall-binPROGRAMS uninstall-info-am \
#>- 	uninstall-kde_kcfgDATA uninstall-kdelnkDATA uninstall-rcDATA
#>+ 2
uninstall-am: uninstall-kde-icons  uninstall-binPROGRAMS uninstall-info-am \
	uninstall-kde_kcfgDATA uninstall-kdelnkDATA uninstall-rcDATA

.PHONY: GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-libtool distclean distclean-compile \
	distclean-depend distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am info info-am install \
	install-am install-binPROGRAMS install-data install-data-am \
	install-exec install-exec-am install-info install-info-am \
	install-kde_kcfgDATA install-kdelnkDATA install-man \
	install-rcDATA install-strip installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool tags uninstall uninstall-am \
	uninstall-binPROGRAMS uninstall-info-am uninstall-kde_kcfgDATA \
	uninstall-kdelnkDATA uninstall-rcDATA


messages: rc.cpp
	$(XGETTEXT) *.cpp -o $(podir)/kbird2.pot
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:

#>+ 5
kbird2iface.kidl: $(srcdir)/kbird2iface.h $(DCOP_DEPENDENCIES)
	$(DCOPIDL) $(srcdir)/kbird2iface.h > kbird2iface.kidl || ( rm -f kbird2iface.kidl ; false )
kbird2iface_skel.cpp: kbird2iface.kidl
	$(DCOPIDL2CPP) --c++-suffix cpp --no-signals --no-stub kbird2iface.kidl

#>+ 3
palomardatatable.moc: $(srcdir)/palomardatatable.h
	$(MOC) $(srcdir)/palomardatatable.h -o palomardatatable.moc

#>+ 2
mocs: palomardatatable.moc

#>+ 3
kbird2view.moc: $(srcdir)/kbird2view.h
	$(MOC) $(srcdir)/kbird2view.h -o kbird2view.moc

#>+ 2
mocs: kbird2view.moc

#>+ 3
parejas.moc.cpp: $(srcdir)/parejas.h
	$(MOC) $(srcdir)/parejas.h -o parejas.moc.cpp

#>+ 2
mocs: parejas.moc.cpp

#>+ 3
plumaje.moc.cpp: $(srcdir)/plumaje.h
	$(MOC) $(srcdir)/plumaje.h -o plumaje.moc.cpp

#>+ 2
mocs: plumaje.moc.cpp

#>+ 3
tiposuelta.moc.cpp: $(srcdir)/tiposuelta.h
	$(MOC) $(srcdir)/tiposuelta.h -o tiposuelta.moc.cpp

#>+ 2
mocs: tiposuelta.moc.cpp

#>+ 3
suelta.moc: $(srcdir)/suelta.h
	$(MOC) $(srcdir)/suelta.h -o suelta.moc

#>+ 2
mocs: suelta.moc

#>+ 3
concursos.moc: $(srcdir)/concursos.h
	$(MOC) $(srcdir)/concursos.h -o concursos.moc

#>+ 2
mocs: concursos.moc

#>+ 3
parejasstats.moc: $(srcdir)/parejasstats.h
	$(MOC) $(srcdir)/parejasstats.h -o parejasstats.moc

#>+ 2
mocs: parejasstats.moc

#>+ 3
listados.moc.cpp: $(srcdir)/listados.h
	$(MOC) $(srcdir)/listados.h -o listados.moc.cpp

#>+ 2
mocs: listados.moc.cpp

#>+ 3
kbird2.moc: $(srcdir)/kbird2.h
	$(MOC) $(srcdir)/kbird2.h -o kbird2.moc

#>+ 2
mocs: kbird2.moc

#>+ 3
nacion.moc.cpp: $(srcdir)/nacion.h
	$(MOC) $(srcdir)/nacion.h -o nacion.moc.cpp

#>+ 2
mocs: nacion.moc.cpp

#>+ 3
arbolgen.moc.cpp: $(srcdir)/arbolgen.h
	$(MOC) $(srcdir)/arbolgen.h -o arbolgen.moc.cpp

#>+ 2
mocs: arbolgen.moc.cpp

#>+ 3
basechart.moc: $(srcdir)/basechart.h
	$(MOC) $(srcdir)/basechart.h -o basechart.moc

#>+ 2
mocs: basechart.moc

#>+ 3
buscar.moc: $(srcdir)/buscar.h
	$(MOC) $(srcdir)/buscar.h -o buscar.moc

#>+ 2
mocs: buscar.moc

#>+ 3
datospaloma.moc.cpp: $(srcdir)/datospaloma.h
	$(MOC) $(srcdir)/datospaloma.h -o datospaloma.moc.cpp

#>+ 2
mocs: datospaloma.moc.cpp

#>+ 3
comprobar.moc: $(srcdir)/comprobar.h
	$(MOC) $(srcdir)/comprobar.h -o comprobar.moc

#>+ 2
mocs: comprobar.moc

#>+ 3
gestionparametros.moc.cpp: $(srcdir)/gestionparametros.h
	$(MOC) $(srcdir)/gestionparametros.h -o gestionparametros.moc.cpp

#>+ 2
mocs: gestionparametros.moc.cpp

#>+ 3
ojo.moc.cpp: $(srcdir)/ojo.h
	$(MOC) $(srcdir)/ojo.h -o ojo.moc.cpp

#>+ 2
mocs: ojo.moc.cpp

#>+ 3
generalstats.moc: $(srcdir)/generalstats.h
	$(MOC) $(srcdir)/generalstats.h -o generalstats.moc

#>+ 2
mocs: generalstats.moc

#>+ 3
pref.moc: $(srcdir)/pref.h
	$(MOC) $(srcdir)/pref.h -o pref.moc

#>+ 2
mocs: pref.moc

#>+ 3
nuevoconcurso.moc: $(srcdir)/nuevoconcurso.h
	$(MOC) $(srcdir)/nuevoconcurso.h -o nuevoconcurso.moc

#>+ 2
mocs: nuevoconcurso.moc

#>+ 3
exportarTaurisDlg.moc: $(srcdir)/exportarTaurisDlg.h
	$(MOC) $(srcdir)/exportarTaurisDlg.h -o exportarTaurisDlg.moc

#>+ 2
mocs: exportarTaurisDlg.moc

#>+ 3
buscar.cpp.moc: $(srcdir)/buscar.cpp.h
	$(MOC) $(srcdir)/buscar.cpp.h -o buscar.cpp.moc

#>+ 2
mocs: buscar.cpp.moc

#>+ 3
clean-metasources:
	-rm -f  palomardatatable.moc kbird2view.moc parejas.moc.cpp plumaje.moc.cpp tiposuelta.moc.cpp suelta.moc concursos.moc parejasstats.moc listados.moc.cpp kbird2.moc nacion.moc.cpp arbolgen.moc.cpp basechart.moc buscar.moc datospaloma.moc.cpp comprobar.moc gestionparametros.moc.cpp ojo.moc.cpp generalstats.moc pref.moc nuevoconcurso.moc exportarTaurisDlg.moc buscar.cpp.moc

#>+ 2
KDE_DIST=update.html nuevoHijoDlg.ui comprobarDlg.ui plumajeWdg.ui arbolGenWdg.h buscar.cpp.h parejasWdg.ui sueltasWdg.h kbird2.desktop parejasStatsDlg.ui concursosWdg.h listadosWdg.h update.xml exportarTaurisWdg.h kbird2 pagetwowdg.h updatePrefWdg.h kbird2config.h buscar.cpp.cpp hi16-app-kbird2.png exportarTaurisDlg.cpp plumajeWdg.h nacionWdg.h datosPalomaWdg.h nuevoConcursoDlg.h sueltasWdg.ui hi32-app-kbird2.png tiposueltaWdg.h kbird2.kcfg nuevoHijoDlg.h nuevoConcursoDlg.ui comprobarDlg.h tiposueltaWdg.ui exportarTaurisWdg.ui kbird2_client palomas-21-12-2004 pageonewdg.ui arbolGenWdg.ui pagetwowdg.ui pageonewdg.h nacionWdg.ui updatedlg.h kbird2-2.6.0 ojoWdg.ui concursosWdg.ui update-novalido.xml parejasStatsDlg.h listadosWdg.ui updateDetailsDlg.ui updatedlg.ui updateDetailsDlg.h ojoWdg.h updatePrefWdg.ui kbird2.lsm kbird2ui.rc nuevaparejaWdg.h kbird2iface.kidl buscarDlg.h kbird2iface.h fede.png update.dtd exportarTaurisDlg.h nuevaparejaWdg.ui buscarDlg.ui kbird2config.kcfgc datosPalomaWdg.ui parejasWdg.h update.xslt 

#>+ 4
clean-idl:
	-rm -f \
	kbird2iface_skel.cpp kbird2iface_skel.h kbird2iface.kidl 

#>+ 25
clean-ui:
	-rm -f \
	listadosWdg.cpp listadosWdg.h listadosWdg.moc \
	pageonewdg.cpp pageonewdg.h pageonewdg.moc \
	ojoWdg.cpp ojoWdg.h ojoWdg.moc \
	plumajeWdg.cpp plumajeWdg.h plumajeWdg.moc \
	nacionWdg.cpp nacionWdg.h nacionWdg.moc \
	tiposueltaWdg.cpp tiposueltaWdg.h tiposueltaWdg.moc \
	parejasWdg.cpp parejasWdg.h parejasWdg.moc \
	nuevaparejaWdg.cpp nuevaparejaWdg.h nuevaparejaWdg.moc \
	nuevoHijoDlg.cpp nuevoHijoDlg.h nuevoHijoDlg.moc \
	datosPalomaWdg.cpp datosPalomaWdg.h datosPalomaWdg.moc \
	arbolGenWdg.cpp arbolGenWdg.h arbolGenWdg.moc \
	buscarDlg.cpp buscarDlg.h buscarDlg.moc \
	parejasStatsDlg.cpp parejasStatsDlg.h parejasStatsDlg.moc \
	sueltasWdg.cpp sueltasWdg.h sueltasWdg.moc \
	pagetwowdg.cpp pagetwowdg.h pagetwowdg.moc \
	updatePrefWdg.cpp updatePrefWdg.h updatePrefWdg.moc \
	updatedlg.cpp updatedlg.h updatedlg.moc \
	updateDetailsDlg.cpp updateDetailsDlg.h updateDetailsDlg.moc \
	concursosWdg.cpp concursosWdg.h concursosWdg.moc \
	nuevoConcursoDlg.cpp nuevoConcursoDlg.h nuevoConcursoDlg.moc \
	comprobarDlg.cpp comprobarDlg.h comprobarDlg.moc \
	exportarTaurisWdg.cpp exportarTaurisWdg.h exportarTaurisWdg.moc 

#>+ 4
clean-kcfg:
	-rm -f \
	kbird2config.cpp kbird2config.h 

#>+ 2
docs-am:

#>+ 10
install-kde-icons:
	$(mkinstalldirs) $(DESTDIR)$(kde_icondir)/hicolor/16x16/apps
	$(INSTALL_DATA) $(srcdir)/hi16-app-kbird2.png $(DESTDIR)$(kde_icondir)/hicolor/16x16/apps/kbird2.png
	$(mkinstalldirs) $(DESTDIR)$(kde_icondir)/hicolor/32x32/apps
	$(INSTALL_DATA) $(srcdir)/hi32-app-kbird2.png $(DESTDIR)$(kde_icondir)/hicolor/32x32/apps/kbird2.png

uninstall-kde-icons:
	-rm -f $(DESTDIR)$(kde_icondir)/hicolor/16x16/apps/kbird2.png
	-rm -f $(DESTDIR)$(kde_icondir)/hicolor/32x32/apps/kbird2.png

#>+ 6
force-reedit:
		cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/Makefile
	cd $(top_srcdir) && perl admin/am_edit src/Makefile.in


#>+ 21
clean-bcheck: 
	rm -f *.bchecktest.cc *.bchecktest.cc.class a.out

bcheck: bcheck-am

bcheck-am:
	@for i in ; do \
	    if test $(srcdir)/$$i -nt $$i.bchecktest.cc; then \
	        echo "int main() {return 0;}" > $$i.bchecktest.cc ; \
	        echo "#include \"$$i\"" >> $$i.bchecktest.cc ; \
	        echo "$$i"; \
	        if ! $(CXXCOMPILE)  --dump-class-hierarchy -c $$i.bchecktest.cc; then \
	            rm -f $$i.bchecktest.cc; exit 1; \
	        fi ; \
	        echo "" >> $$i.bchecktest.cc.class; \
	        perl $(top_srcdir)/admin/bcheck.pl $$i.bchecktest.cc.class || { rm -f $$i.bchecktest.cc; exit 1; }; \
	        rm -f a.out; \
	    fi ; \
	done


#>+ 11
kbird2.all_cpp.cpp: $(srcdir)/Makefile.in $(srcdir)/main.cpp $(srcdir)/kbird2.cpp $(srcdir)/kbird2view.cpp $(srcdir)/listados.cpp $(srcdir)/configuration.cpp $(srcdir)/gestionparametros.cpp $(srcdir)/ojo.cpp $(srcdir)/plumaje.cpp $(srcdir)/nacion.cpp $(srcdir)/tiposuelta.cpp $(srcdir)/parejas.cpp $(srcdir)/datospaloma.cpp $(srcdir)/arbolgen.cpp $(srcdir)/buscar.cpp $(srcdir)/parejasstats.cpp $(srcdir)/basechart.cpp $(srcdir)/generalstats.cpp $(srcdir)/suelta.cpp $(srcdir)/pref.cpp $(srcdir)/concursos.cpp $(srcdir)/nuevoconcurso.cpp $(srcdir)/comprobar.cpp $(srcdir)/palomardatatable.cpp $(srcdir)/kbird2iface_skel.cpp $(srcdir)/listadosWdg.cpp $(srcdir)/pageonewdg.cpp $(srcdir)/ojoWdg.cpp $(srcdir)/plumajeWdg.cpp $(srcdir)/nacionWdg.cpp $(srcdir)/tiposueltaWdg.cpp $(srcdir)/parejasWdg.cpp $(srcdir)/nuevaparejaWdg.cpp $(srcdir)/nuevoHijoDlg.cpp $(srcdir)/datosPalomaWdg.cpp $(srcdir)/arbolGenWdg.cpp $(srcdir)/buscarDlg.cpp $(srcdir)/parejasStatsDlg.cpp $(srcdir)/sueltasWdg.cpp $(srcdir)/pagetwowdg.cpp $(srcdir)/updatePrefWdg.cpp $(srcdir)/updatedlg.cpp $(srcdir)/updateDetailsDlg.cpp $(srcdir)/concursosWdg.cpp $(srcdir)/nuevoConcursoDlg.cpp $(srcdir)/comprobarDlg.cpp $(srcdir)/exportarTaurisWdg.cpp $(srcdir)/kbird2config.cpp $(srcdir)/parejas.moc.cpp $(srcdir)/tiposuelta.moc.cpp $(srcdir)/nacion.moc.cpp $(srcdir)/arbolgen.moc.cpp $(srcdir)/datospaloma.moc.cpp $(srcdir)/gestionparametros.moc.cpp $(srcdir)/plumaje.moc.cpp $(srcdir)/listados.moc.cpp $(srcdir)/ojo.moc.cpp  ojoWdg.moc pageonewdg.moc plumajeWdg.moc concursos.moc suelta.moc kbird2.moc updatedlg.moc buscar.moc pagetwowdg.moc comprobar.moc generalstats.moc nuevoconcurso.moc pref.moc updateDetailsDlg.moc parejasWdg.moc exportarTaurisWdg.moc buscarDlg.moc nuevaparejaWdg.moc listadosWdg.moc parejasStatsDlg.moc nuevoHijoDlg.moc concursosWdg.moc tiposueltaWdg.moc palomardatatable.moc kbird2view.moc sueltasWdg.moc parejasstats.moc basechart.moc nuevoConcursoDlg.moc nacionWdg.moc arbolGenWdg.moc datosPalomaWdg.moc updatePrefWdg.moc comprobarDlg.moc
	@echo 'creating kbird2.all_cpp.cpp ...'; \
	rm -f kbird2.all_cpp.files kbird2.all_cpp.final; \
	echo "#define KDE_USE_FINAL 1" >> kbird2.all_cpp.final; \
	for file in main.cpp kbird2.cpp kbird2view.cpp listados.cpp configuration.cpp gestionparametros.cpp ojo.cpp plumaje.cpp nacion.cpp tiposuelta.cpp parejas.cpp datospaloma.cpp arbolgen.cpp buscar.cpp parejasstats.cpp basechart.cpp generalstats.cpp suelta.cpp pref.cpp concursos.cpp nuevoconcurso.cpp comprobar.cpp palomardatatable.cpp kbird2iface_skel.cpp listadosWdg.cpp pageonewdg.cpp ojoWdg.cpp plumajeWdg.cpp nacionWdg.cpp tiposueltaWdg.cpp parejasWdg.cpp nuevaparejaWdg.cpp nuevoHijoDlg.cpp datosPalomaWdg.cpp arbolGenWdg.cpp buscarDlg.cpp parejasStatsDlg.cpp sueltasWdg.cpp pagetwowdg.cpp updatePrefWdg.cpp updatedlg.cpp updateDetailsDlg.cpp concursosWdg.cpp nuevoConcursoDlg.cpp comprobarDlg.cpp exportarTaurisWdg.cpp kbird2config.cpp parejas.moc.cpp tiposuelta.moc.cpp nacion.moc.cpp arbolgen.moc.cpp datospaloma.moc.cpp gestionparametros.moc.cpp plumaje.moc.cpp listados.moc.cpp ojo.moc.cpp ; do \
	  echo "#include \"$$file\"" >> kbird2.all_cpp.files; \
	  test ! -f $(srcdir)/$$file || egrep '^#pragma +implementation' $(srcdir)/$$file >> kbird2.all_cpp.final; \
	done; \
	cat kbird2.all_cpp.final kbird2.all_cpp.files > kbird2.all_cpp.cpp; \
	rm -f kbird2.all_cpp.final kbird2.all_cpp.files

#>+ 11
kbird2_client.all_cpp.cpp: $(srcdir)/Makefile.in $(srcdir)/kbird2_client.cpp $(srcdir)/parejas.moc.cpp $(srcdir)/tiposuelta.moc.cpp $(srcdir)/nacion.moc.cpp $(srcdir)/arbolgen.moc.cpp $(srcdir)/datospaloma.moc.cpp $(srcdir)/gestionparametros.moc.cpp $(srcdir)/plumaje.moc.cpp $(srcdir)/listados.moc.cpp $(srcdir)/ojo.moc.cpp 
	@echo 'creating kbird2_client.all_cpp.cpp ...'; \
	rm -f kbird2_client.all_cpp.files kbird2_client.all_cpp.final; \
	echo "#define KDE_USE_FINAL 1" >> kbird2_client.all_cpp.final; \
	for file in kbird2_client.cpp parejas.moc.cpp tiposuelta.moc.cpp nacion.moc.cpp arbolgen.moc.cpp datospaloma.moc.cpp gestionparametros.moc.cpp plumaje.moc.cpp listados.moc.cpp ojo.moc.cpp ; do \
	  echo "#include \"$$file\"" >> kbird2_client.all_cpp.files; \
	  test ! -f $(srcdir)/$$file || egrep '^#pragma +implementation' $(srcdir)/$$file >> kbird2_client.all_cpp.final; \
	done; \
	cat kbird2_client.all_cpp.final kbird2_client.all_cpp.files > kbird2_client.all_cpp.cpp; \
	rm -f kbird2_client.all_cpp.final kbird2_client.all_cpp.files

#>+ 3
clean-final:
	-rm -f kbird2.all_cpp.cpp kbird2_client.all_cpp.cpp

#>+ 3
final:
	$(MAKE) kbird2_OBJECTS="$(kbird2_final_OBJECTS)" all-am

#>+ 3
final-install:
	$(MAKE) kbird2_OBJECTS="$(kbird2_final_OBJECTS)" install-am

#>+ 3
no-final:
	$(MAKE) kbird2_OBJECTS="$(kbird2_nofinal_OBJECTS)" all-am

#>+ 3
no-final-install:
	$(MAKE) kbird2_OBJECTS="$(kbird2_nofinal_OBJECTS)" install-am

#>+ 3
cvs-clean:
	$(MAKE) admindir=$(top_srcdir)/admin -f $(top_srcdir)/admin/Makefile.common cvs-clean

#>+ 3
kde-rpo-clean:
	-rm -f *.rpo

#>+ 65
$(srcdir)/ojo.h: listadosWdg.h pageonewdg.h ojoWdg.h plumajeWdg.h nacionWdg.h tiposueltaWdg.h parejasWdg.h nuevaparejaWdg.h nuevoHijoDlg.h datosPalomaWdg.h arbolGenWdg.h buscarDlg.h parejasStatsDlg.h sueltasWdg.h pagetwowdg.h updatePrefWdg.h updatedlg.h updateDetailsDlg.h concursosWdg.h nuevoConcursoDlg.h comprobarDlg.h exportarTaurisWdg.h kbird2config.h 
$(srcdir)/parejas.h: listadosWdg.h pageonewdg.h ojoWdg.h plumajeWdg.h nacionWdg.h tiposueltaWdg.h parejasWdg.h nuevaparejaWdg.h nuevoHijoDlg.h datosPalomaWdg.h arbolGenWdg.h buscarDlg.h parejasStatsDlg.h sueltasWdg.h pagetwowdg.h updatePrefWdg.h updatedlg.h updateDetailsDlg.h concursosWdg.h nuevoConcursoDlg.h comprobarDlg.h exportarTaurisWdg.h kbird2config.h 
buscar.lo: buscar.moc 
suelta.lo: suelta.moc 
$(srcdir)/main.cpp: listadosWdg.h pageonewdg.h ojoWdg.h plumajeWdg.h nacionWdg.h tiposueltaWdg.h parejasWdg.h nuevaparejaWdg.h nuevoHijoDlg.h datosPalomaWdg.h arbolGenWdg.h buscarDlg.h parejasStatsDlg.h sueltasWdg.h pagetwowdg.h updatePrefWdg.h updatedlg.h updateDetailsDlg.h concursosWdg.h nuevoConcursoDlg.h comprobarDlg.h exportarTaurisWdg.h kbird2config.h 
$(srcdir)/buscar.cpp: listadosWdg.h pageonewdg.h ojoWdg.h plumajeWdg.h nacionWdg.h tiposueltaWdg.h parejasWdg.h nuevaparejaWdg.h nuevoHijoDlg.h datosPalomaWdg.h arbolGenWdg.h buscarDlg.h parejasStatsDlg.h sueltasWdg.h pagetwowdg.h updatePrefWdg.h updatedlg.h updateDetailsDlg.h concursosWdg.h nuevoConcursoDlg.h comprobarDlg.h exportarTaurisWdg.h kbird2config.h 
$(srcdir)/datospaloma.cpp: listadosWdg.h pageonewdg.h ojoWdg.h plumajeWdg.h nacionWdg.h tiposueltaWdg.h parejasWdg.h nuevaparejaWdg.h nuevoHijoDlg.h datosPalomaWdg.h arbolGenWdg.h buscarDlg.h parejasStatsDlg.h sueltasWdg.h pagetwowdg.h updatePrefWdg.h updatedlg.h updateDetailsDlg.h concursosWdg.h nuevoConcursoDlg.h comprobarDlg.h exportarTaurisWdg.h kbird2config.h 
$(srcdir)/generalstats.cpp: listadosWdg.h pageonewdg.h ojoWdg.h plumajeWdg.h nacionWdg.h tiposueltaWdg.h parejasWdg.h nuevaparejaWdg.h nuevoHijoDlg.h datosPalomaWdg.h arbolGenWdg.h buscarDlg.h parejasStatsDlg.h sueltasWdg.h pagetwowdg.h updatePrefWdg.h updatedlg.h updateDetailsDlg.h concursosWdg.h nuevoConcursoDlg.h comprobarDlg.h exportarTaurisWdg.h kbird2config.h 
exportarTaurisDlg.o: exportarTaurisDlg.moc 
$(srcdir)/listados.cpp: listadosWdg.h pageonewdg.h ojoWdg.h plumajeWdg.h nacionWdg.h tiposueltaWdg.h parejasWdg.h nuevaparejaWdg.h nuevoHijoDlg.h datosPalomaWdg.h arbolGenWdg.h buscarDlg.h parejasStatsDlg.h sueltasWdg.h pagetwowdg.h updatePrefWdg.h updatedlg.h updateDetailsDlg.h concursosWdg.h nuevoConcursoDlg.h comprobarDlg.h exportarTaurisWdg.h kbird2config.h 
generalstats.o: generalstats.moc 
basechart.o: basechart.moc 
$(srcdir)/configuration.h: listadosWdg.h pageonewdg.h ojoWdg.h plumajeWdg.h nacionWdg.h tiposueltaWdg.h parejasWdg.h nuevaparejaWdg.h nuevoHijoDlg.h datosPalomaWdg.h arbolGenWdg.h buscarDlg.h parejasStatsDlg.h sueltasWdg.h pagetwowdg.h updatePrefWdg.h updatedlg.h updateDetailsDlg.h concursosWdg.h nuevoConcursoDlg.h comprobarDlg.h exportarTaurisWdg.h kbird2config.h 
nmcheck-am: nmcheck
kbird2.o: kbird2.moc 
concursos.lo: concursos.moc 
$(srcdir)/arbolgen.cpp: listadosWdg.h pageonewdg.h ojoWdg.h plumajeWdg.h nacionWdg.h tiposueltaWdg.h parejasWdg.h nuevaparejaWdg.h nuevoHijoDlg.h datosPalomaWdg.h arbolGenWdg.h buscarDlg.h parejasStatsDlg.h sueltasWdg.h pagetwowdg.h updatePrefWdg.h updatedlg.h updateDetailsDlg.h concursosWdg.h nuevoConcursoDlg.h comprobarDlg.h exportarTaurisWdg.h kbird2config.h 
$(srcdir)/parejas.cpp: listadosWdg.h pageonewdg.h ojoWdg.h plumajeWdg.h nacionWdg.h tiposueltaWdg.h parejasWdg.h nuevaparejaWdg.h nuevoHijoDlg.h datosPalomaWdg.h arbolGenWdg.h buscarDlg.h parejasStatsDlg.h sueltasWdg.h pagetwowdg.h updatePrefWdg.h updatedlg.h updateDetailsDlg.h concursosWdg.h nuevoConcursoDlg.h comprobarDlg.h exportarTaurisWdg.h kbird2config.h 
parejasstats.lo: parejasstats.moc 
$(srcdir)/nacion.h: listadosWdg.h pageonewdg.h ojoWdg.h plumajeWdg.h nacionWdg.h tiposueltaWdg.h parejasWdg.h nuevaparejaWdg.h nuevoHijoDlg.h datosPalomaWdg.h arbolGenWdg.h buscarDlg.h parejasStatsDlg.h sueltasWdg.h pagetwowdg.h updatePrefWdg.h updatedlg.h updateDetailsDlg.h concursosWdg.h nuevoConcursoDlg.h comprobarDlg.h exportarTaurisWdg.h kbird2config.h 
comprobar.lo: comprobar.moc 
generalstats.lo: generalstats.moc 
buscar.o: buscar.moc 
comprobar.o: comprobar.moc 
$(srcdir)/parejasstats.cpp: listadosWdg.h pageonewdg.h ojoWdg.h plumajeWdg.h nacionWdg.h tiposueltaWdg.h parejasWdg.h nuevaparejaWdg.h nuevoHijoDlg.h datosPalomaWdg.h arbolGenWdg.h buscarDlg.h parejasStatsDlg.h sueltasWdg.h pagetwowdg.h updatePrefWdg.h updatedlg.h updateDetailsDlg.h concursosWdg.h nuevoConcursoDlg.h comprobarDlg.h exportarTaurisWdg.h kbird2config.h 
$(srcdir)/nuevoconcurso.cpp: listadosWdg.h pageonewdg.h ojoWdg.h plumajeWdg.h nacionWdg.h tiposueltaWdg.h parejasWdg.h nuevaparejaWdg.h nuevoHijoDlg.h datosPalomaWdg.h arbolGenWdg.h buscarDlg.h parejasStatsDlg.h sueltasWdg.h pagetwowdg.h updatePrefWdg.h updatedlg.h updateDetailsDlg.h concursosWdg.h nuevoConcursoDlg.h comprobarDlg.h exportarTaurisWdg.h kbird2config.h 
nuevoconcurso.o: nuevoconcurso.moc 
$(srcdir)/palomardatatable.h: listadosWdg.h pageonewdg.h ojoWdg.h plumajeWdg.h nacionWdg.h tiposueltaWdg.h parejasWdg.h nuevaparejaWdg.h nuevoHijoDlg.h datosPalomaWdg.h arbolGenWdg.h buscarDlg.h parejasStatsDlg.h sueltasWdg.h pagetwowdg.h updatePrefWdg.h updatedlg.h updateDetailsDlg.h concursosWdg.h nuevoConcursoDlg.h comprobarDlg.h exportarTaurisWdg.h kbird2config.h 
kbird2view.o: kbird2view.moc 
$(srcdir)/gestionparametros.cpp: listadosWdg.h pageonewdg.h ojoWdg.h plumajeWdg.h nacionWdg.h tiposueltaWdg.h parejasWdg.h nuevaparejaWdg.h nuevoHijoDlg.h datosPalomaWdg.h arbolGenWdg.h buscarDlg.h parejasStatsDlg.h sueltasWdg.h pagetwowdg.h updatePrefWdg.h updatedlg.h updateDetailsDlg.h concursosWdg.h nuevoConcursoDlg.h comprobarDlg.h exportarTaurisWdg.h kbird2config.h 
$(srcdir)/comprobar.cpp: listadosWdg.h pageonewdg.h ojoWdg.h plumajeWdg.h nacionWdg.h tiposueltaWdg.h parejasWdg.h nuevaparejaWdg.h nuevoHijoDlg.h datosPalomaWdg.h arbolGenWdg.h buscarDlg.h parejasStatsDlg.h sueltasWdg.h pagetwowdg.h updatePrefWdg.h updatedlg.h updateDetailsDlg.h concursosWdg.h nuevoConcursoDlg.h comprobarDlg.h exportarTaurisWdg.h kbird2config.h 
suelta.o: suelta.moc 
nuevoconcurso.lo: nuevoconcurso.moc 
$(srcdir)/arbolgen.h: listadosWdg.h pageonewdg.h ojoWdg.h plumajeWdg.h nacionWdg.h tiposueltaWdg.h parejasWdg.h nuevaparejaWdg.h nuevoHijoDlg.h datosPalomaWdg.h arbolGenWdg.h buscarDlg.h parejasStatsDlg.h sueltasWdg.h pagetwowdg.h updatePrefWdg.h updatedlg.h updateDetailsDlg.h concursosWdg.h nuevoConcursoDlg.h comprobarDlg.h exportarTaurisWdg.h kbird2config.h 
concursos.o: concursos.moc 
kbird2.lo: kbird2.moc 
$(srcdir)/tiposuelta.h: listadosWdg.h pageonewdg.h ojoWdg.h plumajeWdg.h nacionWdg.h tiposueltaWdg.h parejasWdg.h nuevaparejaWdg.h nuevoHijoDlg.h datosPalomaWdg.h arbolGenWdg.h buscarDlg.h parejasStatsDlg.h sueltasWdg.h pagetwowdg.h updatePrefWdg.h updatedlg.h updateDetailsDlg.h concursosWdg.h nuevoConcursoDlg.h comprobarDlg.h exportarTaurisWdg.h kbird2config.h 
pref.lo: pref.moc 
$(srcdir)/configuration.cpp: listadosWdg.h pageonewdg.h ojoWdg.h plumajeWdg.h nacionWdg.h tiposueltaWdg.h parejasWdg.h nuevaparejaWdg.h nuevoHijoDlg.h datosPalomaWdg.h arbolGenWdg.h buscarDlg.h parejasStatsDlg.h sueltasWdg.h pagetwowdg.h updatePrefWdg.h updatedlg.h updateDetailsDlg.h concursosWdg.h nuevoConcursoDlg.h comprobarDlg.h exportarTaurisWdg.h kbird2config.h 
palomardatatable.lo: palomardatatable.moc 
buscar.cpp.lo: buscar.cpp.moc 
$(srcdir)/kbird2view.cpp: listadosWdg.h pageonewdg.h ojoWdg.h plumajeWdg.h nacionWdg.h tiposueltaWdg.h parejasWdg.h nuevaparejaWdg.h nuevoHijoDlg.h datosPalomaWdg.h arbolGenWdg.h buscarDlg.h parejasStatsDlg.h sueltasWdg.h pagetwowdg.h updatePrefWdg.h updatedlg.h updateDetailsDlg.h concursosWdg.h nuevoConcursoDlg.h comprobarDlg.h exportarTaurisWdg.h kbird2config.h 
parejasstats.o: parejasstats.moc 
$(srcdir)/kbird2.cpp: listadosWdg.h pageonewdg.h ojoWdg.h plumajeWdg.h nacionWdg.h tiposueltaWdg.h parejasWdg.h nuevaparejaWdg.h nuevoHijoDlg.h datosPalomaWdg.h arbolGenWdg.h buscarDlg.h parejasStatsDlg.h sueltasWdg.h pagetwowdg.h updatePrefWdg.h updatedlg.h updateDetailsDlg.h concursosWdg.h nuevoConcursoDlg.h comprobarDlg.h exportarTaurisWdg.h kbird2config.h 
buscar.cpp.o: buscar.cpp.moc 
$(srcdir)/plumaje.h: listadosWdg.h pageonewdg.h ojoWdg.h plumajeWdg.h nacionWdg.h tiposueltaWdg.h parejasWdg.h nuevaparejaWdg.h nuevoHijoDlg.h datosPalomaWdg.h arbolGenWdg.h buscarDlg.h parejasStatsDlg.h sueltasWdg.h pagetwowdg.h updatePrefWdg.h updatedlg.h updateDetailsDlg.h concursosWdg.h nuevoConcursoDlg.h comprobarDlg.h exportarTaurisWdg.h kbird2config.h 
nmcheck: 
$(srcdir)/concursos.cpp: listadosWdg.h pageonewdg.h ojoWdg.h plumajeWdg.h nacionWdg.h tiposueltaWdg.h parejasWdg.h nuevaparejaWdg.h nuevoHijoDlg.h datosPalomaWdg.h arbolGenWdg.h buscarDlg.h parejasStatsDlg.h sueltasWdg.h pagetwowdg.h updatePrefWdg.h updatedlg.h updateDetailsDlg.h concursosWdg.h nuevoConcursoDlg.h comprobarDlg.h exportarTaurisWdg.h kbird2config.h 
$(srcdir)/suelta.cpp: listadosWdg.h pageonewdg.h ojoWdg.h plumajeWdg.h nacionWdg.h tiposueltaWdg.h parejasWdg.h nuevaparejaWdg.h nuevoHijoDlg.h datosPalomaWdg.h arbolGenWdg.h buscarDlg.h parejasStatsDlg.h sueltasWdg.h pagetwowdg.h updatePrefWdg.h updatedlg.h updateDetailsDlg.h concursosWdg.h nuevoConcursoDlg.h comprobarDlg.h exportarTaurisWdg.h kbird2config.h 
palomardatatable.o: palomardatatable.moc 
kbird2view.lo: kbird2view.moc 
$(srcdir)/pref.cpp: listadosWdg.h pageonewdg.h ojoWdg.h plumajeWdg.h nacionWdg.h tiposueltaWdg.h parejasWdg.h nuevaparejaWdg.h nuevoHijoDlg.h datosPalomaWdg.h arbolGenWdg.h buscarDlg.h parejasStatsDlg.h sueltasWdg.h pagetwowdg.h updatePrefWdg.h updatedlg.h updateDetailsDlg.h concursosWdg.h nuevoConcursoDlg.h comprobarDlg.h exportarTaurisWdg.h kbird2config.h 
$(srcdir)/palomardatatable.cpp: listadosWdg.h pageonewdg.h ojoWdg.h plumajeWdg.h nacionWdg.h tiposueltaWdg.h parejasWdg.h nuevaparejaWdg.h nuevoHijoDlg.h datosPalomaWdg.h arbolGenWdg.h buscarDlg.h parejasStatsDlg.h sueltasWdg.h pagetwowdg.h updatePrefWdg.h updatedlg.h updateDetailsDlg.h concursosWdg.h nuevoConcursoDlg.h comprobarDlg.h exportarTaurisWdg.h kbird2config.h 
$(srcdir)/tiposuelta.cpp: listadosWdg.h pageonewdg.h ojoWdg.h plumajeWdg.h nacionWdg.h tiposueltaWdg.h parejasWdg.h nuevaparejaWdg.h nuevoHijoDlg.h datosPalomaWdg.h arbolGenWdg.h buscarDlg.h parejasStatsDlg.h sueltasWdg.h pagetwowdg.h updatePrefWdg.h updatedlg.h updateDetailsDlg.h concursosWdg.h nuevoConcursoDlg.h comprobarDlg.h exportarTaurisWdg.h kbird2config.h 
$(srcdir)/gestionparametros.h: listadosWdg.h pageonewdg.h ojoWdg.h plumajeWdg.h nacionWdg.h tiposueltaWdg.h parejasWdg.h nuevaparejaWdg.h nuevoHijoDlg.h datosPalomaWdg.h arbolGenWdg.h buscarDlg.h parejasStatsDlg.h sueltasWdg.h pagetwowdg.h updatePrefWdg.h updatedlg.h updateDetailsDlg.h concursosWdg.h nuevoConcursoDlg.h comprobarDlg.h exportarTaurisWdg.h kbird2config.h 
$(srcdir)/listados.h: listadosWdg.h pageonewdg.h ojoWdg.h plumajeWdg.h nacionWdg.h tiposueltaWdg.h parejasWdg.h nuevaparejaWdg.h nuevoHijoDlg.h datosPalomaWdg.h arbolGenWdg.h buscarDlg.h parejasStatsDlg.h sueltasWdg.h pagetwowdg.h updatePrefWdg.h updatedlg.h updateDetailsDlg.h concursosWdg.h nuevoConcursoDlg.h comprobarDlg.h exportarTaurisWdg.h kbird2config.h 
$(srcdir)/plumaje.cpp: listadosWdg.h pageonewdg.h ojoWdg.h plumajeWdg.h nacionWdg.h tiposueltaWdg.h parejasWdg.h nuevaparejaWdg.h nuevoHijoDlg.h datosPalomaWdg.h arbolGenWdg.h buscarDlg.h parejasStatsDlg.h sueltasWdg.h pagetwowdg.h updatePrefWdg.h updatedlg.h updateDetailsDlg.h concursosWdg.h nuevoConcursoDlg.h comprobarDlg.h exportarTaurisWdg.h kbird2config.h 
exportarTaurisDlg.lo: exportarTaurisDlg.moc 
$(srcdir)/basechart.cpp: listadosWdg.h pageonewdg.h ojoWdg.h plumajeWdg.h nacionWdg.h tiposueltaWdg.h parejasWdg.h nuevaparejaWdg.h nuevoHijoDlg.h datosPalomaWdg.h arbolGenWdg.h buscarDlg.h parejasStatsDlg.h sueltasWdg.h pagetwowdg.h updatePrefWdg.h updatedlg.h updateDetailsDlg.h concursosWdg.h nuevoConcursoDlg.h comprobarDlg.h exportarTaurisWdg.h kbird2config.h 
$(srcdir)/nacion.cpp: listadosWdg.h pageonewdg.h ojoWdg.h plumajeWdg.h nacionWdg.h tiposueltaWdg.h parejasWdg.h nuevaparejaWdg.h nuevoHijoDlg.h datosPalomaWdg.h arbolGenWdg.h buscarDlg.h parejasStatsDlg.h sueltasWdg.h pagetwowdg.h updatePrefWdg.h updatedlg.h updateDetailsDlg.h concursosWdg.h nuevoConcursoDlg.h comprobarDlg.h exportarTaurisWdg.h kbird2config.h 
$(srcdir)/ojo.cpp: listadosWdg.h pageonewdg.h ojoWdg.h plumajeWdg.h nacionWdg.h tiposueltaWdg.h parejasWdg.h nuevaparejaWdg.h nuevoHijoDlg.h datosPalomaWdg.h arbolGenWdg.h buscarDlg.h parejasStatsDlg.h sueltasWdg.h pagetwowdg.h updatePrefWdg.h updatedlg.h updateDetailsDlg.h concursosWdg.h nuevoConcursoDlg.h comprobarDlg.h exportarTaurisWdg.h kbird2config.h 
basechart.lo: basechart.moc 
pref.o: pref.moc 
$(srcdir)/datospaloma.h: listadosWdg.h pageonewdg.h ojoWdg.h plumajeWdg.h nacionWdg.h tiposueltaWdg.h parejasWdg.h nuevaparejaWdg.h nuevoHijoDlg.h datosPalomaWdg.h arbolGenWdg.h buscarDlg.h parejasStatsDlg.h sueltasWdg.h pagetwowdg.h updatePrefWdg.h updatedlg.h updateDetailsDlg.h concursosWdg.h nuevoConcursoDlg.h comprobarDlg.h exportarTaurisWdg.h kbird2config.h 

#>+ 336
nuevoHijoDlg.cpp: $(srcdir)/nuevoHijoDlg.ui nuevoHijoDlg.h nuevoHijoDlg.moc
	rm -f nuevoHijoDlg.cpp
	echo '#include <kdialog.h>' > nuevoHijoDlg.cpp
	echo '#include <klocale.h>' >> nuevoHijoDlg.cpp
	$(UIC) -tr ${UIC_TR} -i nuevoHijoDlg.h $(srcdir)/nuevoHijoDlg.ui > nuevoHijoDlg.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" nuevoHijoDlg.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_nuevoHijoDlg,g" >> nuevoHijoDlg.cpp ;\
	rm -f nuevoHijoDlg.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "nuevoHijoDlg.moc"' >> nuevoHijoDlg.cpp; else rm -f nuevoHijoDlg.cpp ; exit $$ret ; fi

nuevoHijoDlg.h: $(srcdir)/nuevoHijoDlg.ui
	$(UIC) -o nuevoHijoDlg.h $(srcdir)/nuevoHijoDlg.ui

nuevoHijoDlg.moc: nuevoHijoDlg.h
	$(MOC) nuevoHijoDlg.h -o nuevoHijoDlg.moc

listadosWdg.cpp: $(srcdir)/listadosWdg.ui listadosWdg.h listadosWdg.moc
	rm -f listadosWdg.cpp
	echo '#include <kdialog.h>' > listadosWdg.cpp
	echo '#include <klocale.h>' >> listadosWdg.cpp
	$(UIC) -tr ${UIC_TR} -i listadosWdg.h $(srcdir)/listadosWdg.ui > listadosWdg.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" listadosWdg.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_listadosWdg,g" >> listadosWdg.cpp ;\
	rm -f listadosWdg.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "listadosWdg.moc"' >> listadosWdg.cpp; else rm -f listadosWdg.cpp ; exit $$ret ; fi

listadosWdg.h: $(srcdir)/listadosWdg.ui
	$(UIC) -o listadosWdg.h $(srcdir)/listadosWdg.ui

listadosWdg.moc: listadosWdg.h
	$(MOC) listadosWdg.h -o listadosWdg.moc

tiposueltaWdg.cpp: $(srcdir)/tiposueltaWdg.ui tiposueltaWdg.h tiposueltaWdg.moc
	rm -f tiposueltaWdg.cpp
	echo '#include <kdialog.h>' > tiposueltaWdg.cpp
	echo '#include <klocale.h>' >> tiposueltaWdg.cpp
	$(UIC) -tr ${UIC_TR} -i tiposueltaWdg.h $(srcdir)/tiposueltaWdg.ui > tiposueltaWdg.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" tiposueltaWdg.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_tiposueltaWdg,g" >> tiposueltaWdg.cpp ;\
	rm -f tiposueltaWdg.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "tiposueltaWdg.moc"' >> tiposueltaWdg.cpp; else rm -f tiposueltaWdg.cpp ; exit $$ret ; fi

tiposueltaWdg.h: $(srcdir)/tiposueltaWdg.ui
	$(UIC) -o tiposueltaWdg.h $(srcdir)/tiposueltaWdg.ui

tiposueltaWdg.moc: tiposueltaWdg.h
	$(MOC) tiposueltaWdg.h -o tiposueltaWdg.moc

pageonewdg.cpp: $(srcdir)/pageonewdg.ui pageonewdg.h pageonewdg.moc
	rm -f pageonewdg.cpp
	echo '#include <kdialog.h>' > pageonewdg.cpp
	echo '#include <klocale.h>' >> pageonewdg.cpp
	$(UIC) -tr ${UIC_TR} -i pageonewdg.h $(srcdir)/pageonewdg.ui > pageonewdg.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" pageonewdg.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_pageonewdg,g" >> pageonewdg.cpp ;\
	rm -f pageonewdg.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "pageonewdg.moc"' >> pageonewdg.cpp; else rm -f pageonewdg.cpp ; exit $$ret ; fi

pageonewdg.h: $(srcdir)/pageonewdg.ui
	$(UIC) -o pageonewdg.h $(srcdir)/pageonewdg.ui

pageonewdg.moc: pageonewdg.h
	$(MOC) pageonewdg.h -o pageonewdg.moc

updatePrefWdg.cpp: $(srcdir)/updatePrefWdg.ui updatePrefWdg.h updatePrefWdg.moc
	rm -f updatePrefWdg.cpp
	echo '#include <kdialog.h>' > updatePrefWdg.cpp
	echo '#include <klocale.h>' >> updatePrefWdg.cpp
	$(UIC) -tr ${UIC_TR} -i updatePrefWdg.h $(srcdir)/updatePrefWdg.ui > updatePrefWdg.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" updatePrefWdg.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_updatePrefWdg,g" >> updatePrefWdg.cpp ;\
	rm -f updatePrefWdg.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "updatePrefWdg.moc"' >> updatePrefWdg.cpp; else rm -f updatePrefWdg.cpp ; exit $$ret ; fi

updatePrefWdg.h: $(srcdir)/updatePrefWdg.ui
	$(UIC) -o updatePrefWdg.h $(srcdir)/updatePrefWdg.ui

updatePrefWdg.moc: updatePrefWdg.h
	$(MOC) updatePrefWdg.h -o updatePrefWdg.moc

exportarTaurisWdg.cpp: $(srcdir)/exportarTaurisWdg.ui exportarTaurisWdg.h exportarTaurisWdg.moc
	rm -f exportarTaurisWdg.cpp
	echo '#include <kdialog.h>' > exportarTaurisWdg.cpp
	echo '#include <klocale.h>' >> exportarTaurisWdg.cpp
	$(UIC) -tr ${UIC_TR} -i exportarTaurisWdg.h $(srcdir)/exportarTaurisWdg.ui > exportarTaurisWdg.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" exportarTaurisWdg.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_exportarTaurisWdg,g" >> exportarTaurisWdg.cpp ;\
	rm -f exportarTaurisWdg.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "exportarTaurisWdg.moc"' >> exportarTaurisWdg.cpp; else rm -f exportarTaurisWdg.cpp ; exit $$ret ; fi

exportarTaurisWdg.h: $(srcdir)/exportarTaurisWdg.ui
	$(UIC) -o exportarTaurisWdg.h $(srcdir)/exportarTaurisWdg.ui

exportarTaurisWdg.moc: exportarTaurisWdg.h
	$(MOC) exportarTaurisWdg.h -o exportarTaurisWdg.moc

parejasStatsDlg.cpp: $(srcdir)/parejasStatsDlg.ui parejasStatsDlg.h parejasStatsDlg.moc
	rm -f parejasStatsDlg.cpp
	echo '#include <kdialog.h>' > parejasStatsDlg.cpp
	echo '#include <klocale.h>' >> parejasStatsDlg.cpp
	$(UIC) -tr ${UIC_TR} -i parejasStatsDlg.h $(srcdir)/parejasStatsDlg.ui > parejasStatsDlg.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" parejasStatsDlg.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_parejasStatsDlg,g" >> parejasStatsDlg.cpp ;\
	rm -f parejasStatsDlg.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "parejasStatsDlg.moc"' >> parejasStatsDlg.cpp; else rm -f parejasStatsDlg.cpp ; exit $$ret ; fi

parejasStatsDlg.h: $(srcdir)/parejasStatsDlg.ui
	$(UIC) -o parejasStatsDlg.h $(srcdir)/parejasStatsDlg.ui

parejasStatsDlg.moc: parejasStatsDlg.h
	$(MOC) parejasStatsDlg.h -o parejasStatsDlg.moc

nuevaparejaWdg.cpp: $(srcdir)/nuevaparejaWdg.ui nuevaparejaWdg.h nuevaparejaWdg.moc
	rm -f nuevaparejaWdg.cpp
	echo '#include <kdialog.h>' > nuevaparejaWdg.cpp
	echo '#include <klocale.h>' >> nuevaparejaWdg.cpp
	$(UIC) -tr ${UIC_TR} -i nuevaparejaWdg.h $(srcdir)/nuevaparejaWdg.ui > nuevaparejaWdg.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" nuevaparejaWdg.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_nuevaparejaWdg,g" >> nuevaparejaWdg.cpp ;\
	rm -f nuevaparejaWdg.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "nuevaparejaWdg.moc"' >> nuevaparejaWdg.cpp; else rm -f nuevaparejaWdg.cpp ; exit $$ret ; fi

nuevaparejaWdg.h: $(srcdir)/nuevaparejaWdg.ui
	$(UIC) -o nuevaparejaWdg.h $(srcdir)/nuevaparejaWdg.ui

nuevaparejaWdg.moc: nuevaparejaWdg.h
	$(MOC) nuevaparejaWdg.h -o nuevaparejaWdg.moc

updatedlg.cpp: $(srcdir)/updatedlg.ui updatedlg.h updatedlg.moc
	rm -f updatedlg.cpp
	echo '#include <kdialog.h>' > updatedlg.cpp
	echo '#include <klocale.h>' >> updatedlg.cpp
	$(UIC) -tr ${UIC_TR} -i updatedlg.h $(srcdir)/updatedlg.ui > updatedlg.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" updatedlg.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_updatedlg,g" >> updatedlg.cpp ;\
	rm -f updatedlg.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "updatedlg.moc"' >> updatedlg.cpp; else rm -f updatedlg.cpp ; exit $$ret ; fi

updatedlg.h: $(srcdir)/updatedlg.ui
	$(UIC) -o updatedlg.h $(srcdir)/updatedlg.ui

updatedlg.moc: updatedlg.h
	$(MOC) updatedlg.h -o updatedlg.moc

arbolGenWdg.cpp: $(srcdir)/arbolGenWdg.ui arbolGenWdg.h arbolGenWdg.moc
	rm -f arbolGenWdg.cpp
	echo '#include <kdialog.h>' > arbolGenWdg.cpp
	echo '#include <klocale.h>' >> arbolGenWdg.cpp
	$(UIC) -tr ${UIC_TR} -i arbolGenWdg.h $(srcdir)/arbolGenWdg.ui > arbolGenWdg.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" arbolGenWdg.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_arbolGenWdg,g" >> arbolGenWdg.cpp ;\
	rm -f arbolGenWdg.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "arbolGenWdg.moc"' >> arbolGenWdg.cpp; else rm -f arbolGenWdg.cpp ; exit $$ret ; fi

arbolGenWdg.h: $(srcdir)/arbolGenWdg.ui
	$(UIC) -o arbolGenWdg.h $(srcdir)/arbolGenWdg.ui

arbolGenWdg.moc: arbolGenWdg.h
	$(MOC) arbolGenWdg.h -o arbolGenWdg.moc

pagetwowdg.cpp: $(srcdir)/pagetwowdg.ui pagetwowdg.h pagetwowdg.moc
	rm -f pagetwowdg.cpp
	echo '#include <kdialog.h>' > pagetwowdg.cpp
	echo '#include <klocale.h>' >> pagetwowdg.cpp
	$(UIC) -tr ${UIC_TR} -i pagetwowdg.h $(srcdir)/pagetwowdg.ui > pagetwowdg.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" pagetwowdg.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_pagetwowdg,g" >> pagetwowdg.cpp ;\
	rm -f pagetwowdg.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "pagetwowdg.moc"' >> pagetwowdg.cpp; else rm -f pagetwowdg.cpp ; exit $$ret ; fi

pagetwowdg.h: $(srcdir)/pagetwowdg.ui
	$(UIC) -o pagetwowdg.h $(srcdir)/pagetwowdg.ui

pagetwowdg.moc: pagetwowdg.h
	$(MOC) pagetwowdg.h -o pagetwowdg.moc

datosPalomaWdg.cpp: $(srcdir)/datosPalomaWdg.ui datosPalomaWdg.h datosPalomaWdg.moc
	rm -f datosPalomaWdg.cpp
	echo '#include <kdialog.h>' > datosPalomaWdg.cpp
	echo '#include <klocale.h>' >> datosPalomaWdg.cpp
	$(UIC) -tr ${UIC_TR} -i datosPalomaWdg.h $(srcdir)/datosPalomaWdg.ui > datosPalomaWdg.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" datosPalomaWdg.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_datosPalomaWdg,g" >> datosPalomaWdg.cpp ;\
	rm -f datosPalomaWdg.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "datosPalomaWdg.moc"' >> datosPalomaWdg.cpp; else rm -f datosPalomaWdg.cpp ; exit $$ret ; fi

datosPalomaWdg.h: $(srcdir)/datosPalomaWdg.ui
	$(UIC) -o datosPalomaWdg.h $(srcdir)/datosPalomaWdg.ui

datosPalomaWdg.moc: datosPalomaWdg.h
	$(MOC) datosPalomaWdg.h -o datosPalomaWdg.moc

nuevoConcursoDlg.cpp: $(srcdir)/nuevoConcursoDlg.ui nuevoConcursoDlg.h nuevoConcursoDlg.moc
	rm -f nuevoConcursoDlg.cpp
	echo '#include <kdialog.h>' > nuevoConcursoDlg.cpp
	echo '#include <klocale.h>' >> nuevoConcursoDlg.cpp
	$(UIC) -tr ${UIC_TR} -i nuevoConcursoDlg.h $(srcdir)/nuevoConcursoDlg.ui > nuevoConcursoDlg.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" nuevoConcursoDlg.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_nuevoConcursoDlg,g" >> nuevoConcursoDlg.cpp ;\
	rm -f nuevoConcursoDlg.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "nuevoConcursoDlg.moc"' >> nuevoConcursoDlg.cpp; else rm -f nuevoConcursoDlg.cpp ; exit $$ret ; fi

nuevoConcursoDlg.h: $(srcdir)/nuevoConcursoDlg.ui
	$(UIC) -o nuevoConcursoDlg.h $(srcdir)/nuevoConcursoDlg.ui

nuevoConcursoDlg.moc: nuevoConcursoDlg.h
	$(MOC) nuevoConcursoDlg.h -o nuevoConcursoDlg.moc

concursosWdg.cpp: $(srcdir)/concursosWdg.ui concursosWdg.h concursosWdg.moc
	rm -f concursosWdg.cpp
	echo '#include <kdialog.h>' > concursosWdg.cpp
	echo '#include <klocale.h>' >> concursosWdg.cpp
	$(UIC) -tr ${UIC_TR} -i concursosWdg.h $(srcdir)/concursosWdg.ui > concursosWdg.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" concursosWdg.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_concursosWdg,g" >> concursosWdg.cpp ;\
	rm -f concursosWdg.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "concursosWdg.moc"' >> concursosWdg.cpp; else rm -f concursosWdg.cpp ; exit $$ret ; fi

concursosWdg.h: $(srcdir)/concursosWdg.ui
	$(UIC) -o concursosWdg.h $(srcdir)/concursosWdg.ui

concursosWdg.moc: concursosWdg.h
	$(MOC) concursosWdg.h -o concursosWdg.moc

comprobarDlg.cpp: $(srcdir)/comprobarDlg.ui comprobarDlg.h comprobarDlg.moc
	rm -f comprobarDlg.cpp
	echo '#include <kdialog.h>' > comprobarDlg.cpp
	echo '#include <klocale.h>' >> comprobarDlg.cpp
	$(UIC) -tr ${UIC_TR} -i comprobarDlg.h $(srcdir)/comprobarDlg.ui > comprobarDlg.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" comprobarDlg.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_comprobarDlg,g" >> comprobarDlg.cpp ;\
	rm -f comprobarDlg.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "comprobarDlg.moc"' >> comprobarDlg.cpp; else rm -f comprobarDlg.cpp ; exit $$ret ; fi

comprobarDlg.h: $(srcdir)/comprobarDlg.ui
	$(UIC) -o comprobarDlg.h $(srcdir)/comprobarDlg.ui

comprobarDlg.moc: comprobarDlg.h
	$(MOC) comprobarDlg.h -o comprobarDlg.moc

updateDetailsDlg.cpp: $(srcdir)/updateDetailsDlg.ui updateDetailsDlg.h updateDetailsDlg.moc
	rm -f updateDetailsDlg.cpp
	echo '#include <kdialog.h>' > updateDetailsDlg.cpp
	echo '#include <klocale.h>' >> updateDetailsDlg.cpp
	$(UIC) -tr ${UIC_TR} -i updateDetailsDlg.h $(srcdir)/updateDetailsDlg.ui > updateDetailsDlg.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" updateDetailsDlg.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_updateDetailsDlg,g" >> updateDetailsDlg.cpp ;\
	rm -f updateDetailsDlg.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "updateDetailsDlg.moc"' >> updateDetailsDlg.cpp; else rm -f updateDetailsDlg.cpp ; exit $$ret ; fi

updateDetailsDlg.h: $(srcdir)/updateDetailsDlg.ui
	$(UIC) -o updateDetailsDlg.h $(srcdir)/updateDetailsDlg.ui

updateDetailsDlg.moc: updateDetailsDlg.h
	$(MOC) updateDetailsDlg.h -o updateDetailsDlg.moc

nacionWdg.cpp: $(srcdir)/nacionWdg.ui nacionWdg.h nacionWdg.moc
	rm -f nacionWdg.cpp
	echo '#include <kdialog.h>' > nacionWdg.cpp
	echo '#include <klocale.h>' >> nacionWdg.cpp
	$(UIC) -tr ${UIC_TR} -i nacionWdg.h $(srcdir)/nacionWdg.ui > nacionWdg.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" nacionWdg.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_nacionWdg,g" >> nacionWdg.cpp ;\
	rm -f nacionWdg.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "nacionWdg.moc"' >> nacionWdg.cpp; else rm -f nacionWdg.cpp ; exit $$ret ; fi

nacionWdg.h: $(srcdir)/nacionWdg.ui
	$(UIC) -o nacionWdg.h $(srcdir)/nacionWdg.ui

nacionWdg.moc: nacionWdg.h
	$(MOC) nacionWdg.h -o nacionWdg.moc

buscarDlg.cpp: $(srcdir)/buscarDlg.ui buscarDlg.h buscarDlg.moc
	rm -f buscarDlg.cpp
	echo '#include <kdialog.h>' > buscarDlg.cpp
	echo '#include <klocale.h>' >> buscarDlg.cpp
	$(UIC) -tr ${UIC_TR} -i buscarDlg.h $(srcdir)/buscarDlg.ui > buscarDlg.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" buscarDlg.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_buscarDlg,g" >> buscarDlg.cpp ;\
	rm -f buscarDlg.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "buscarDlg.moc"' >> buscarDlg.cpp; else rm -f buscarDlg.cpp ; exit $$ret ; fi

buscarDlg.h: $(srcdir)/buscarDlg.ui
	$(UIC) -o buscarDlg.h $(srcdir)/buscarDlg.ui

buscarDlg.moc: buscarDlg.h
	$(MOC) buscarDlg.h -o buscarDlg.moc

plumajeWdg.cpp: $(srcdir)/plumajeWdg.ui plumajeWdg.h plumajeWdg.moc
	rm -f plumajeWdg.cpp
	echo '#include <kdialog.h>' > plumajeWdg.cpp
	echo '#include <klocale.h>' >> plumajeWdg.cpp
	$(UIC) -tr ${UIC_TR} -i plumajeWdg.h $(srcdir)/plumajeWdg.ui > plumajeWdg.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" plumajeWdg.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_plumajeWdg,g" >> plumajeWdg.cpp ;\
	rm -f plumajeWdg.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "plumajeWdg.moc"' >> plumajeWdg.cpp; else rm -f plumajeWdg.cpp ; exit $$ret ; fi

plumajeWdg.h: $(srcdir)/plumajeWdg.ui
	$(UIC) -o plumajeWdg.h $(srcdir)/plumajeWdg.ui

plumajeWdg.moc: plumajeWdg.h
	$(MOC) plumajeWdg.h -o plumajeWdg.moc

parejasWdg.cpp: $(srcdir)/parejasWdg.ui parejasWdg.h parejasWdg.moc
	rm -f parejasWdg.cpp
	echo '#include <kdialog.h>' > parejasWdg.cpp
	echo '#include <klocale.h>' >> parejasWdg.cpp
	$(UIC) -tr ${UIC_TR} -i parejasWdg.h $(srcdir)/parejasWdg.ui > parejasWdg.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" parejasWdg.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_parejasWdg,g" >> parejasWdg.cpp ;\
	rm -f parejasWdg.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "parejasWdg.moc"' >> parejasWdg.cpp; else rm -f parejasWdg.cpp ; exit $$ret ; fi

parejasWdg.h: $(srcdir)/parejasWdg.ui
	$(UIC) -o parejasWdg.h $(srcdir)/parejasWdg.ui

parejasWdg.moc: parejasWdg.h
	$(MOC) parejasWdg.h -o parejasWdg.moc

kbird2config.cpp: kbird2config.h
kbird2config.h: $(srcdir)/kbird2.kcfg $(srcdir)/kbird2config.kcfgc $(KCFG_DEPENDENCIES)
	$(KCONFIG_COMPILER) $(srcdir)/kbird2.kcfg $(srcdir)/kbird2config.kcfgc; ret=$$?; \
	if test "$$ret" != 0; then rm -f kbird2config.h ; exit $$ret ;  fi


ojoWdg.cpp: $(srcdir)/ojoWdg.ui ojoWdg.h ojoWdg.moc
	rm -f ojoWdg.cpp
	echo '#include <kdialog.h>' > ojoWdg.cpp
	echo '#include <klocale.h>' >> ojoWdg.cpp
	$(UIC) -tr ${UIC_TR} -i ojoWdg.h $(srcdir)/ojoWdg.ui > ojoWdg.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" ojoWdg.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_ojoWdg,g" >> ojoWdg.cpp ;\
	rm -f ojoWdg.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "ojoWdg.moc"' >> ojoWdg.cpp; else rm -f ojoWdg.cpp ; exit $$ret ; fi

ojoWdg.h: $(srcdir)/ojoWdg.ui
	$(UIC) -o ojoWdg.h $(srcdir)/ojoWdg.ui

ojoWdg.moc: ojoWdg.h
	$(MOC) ojoWdg.h -o ojoWdg.moc

sueltasWdg.cpp: $(srcdir)/sueltasWdg.ui sueltasWdg.h sueltasWdg.moc
	rm -f sueltasWdg.cpp
	echo '#include <kdialog.h>' > sueltasWdg.cpp
	echo '#include <klocale.h>' >> sueltasWdg.cpp
	$(UIC) -tr ${UIC_TR} -i sueltasWdg.h $(srcdir)/sueltasWdg.ui > sueltasWdg.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" sueltasWdg.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_sueltasWdg,g" >> sueltasWdg.cpp ;\
	rm -f sueltasWdg.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "sueltasWdg.moc"' >> sueltasWdg.cpp; else rm -f sueltasWdg.cpp ; exit $$ret ; fi

sueltasWdg.h: $(srcdir)/sueltasWdg.ui
	$(UIC) -o sueltasWdg.h $(srcdir)/sueltasWdg.ui

sueltasWdg.moc: sueltasWdg.h
	$(MOC) sueltasWdg.h -o sueltasWdg.moc
